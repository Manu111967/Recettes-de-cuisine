recipe-sharing-platform/
├── public/
│   └── images/
│       └── [carbonara.jpg, curry.jpg]
├── src/
│   ├── components/
│   │   ├── Header.js
│   │   ├── RecipeList.js
│   │   └── RecipeItem.js
│   ├── firebase.js
│   ├── App.js
│   ├── index.js
│   └── index.css
├── .gitignore
└── package.json
{
  "name": "recipe-sharing-platform",
  "version": "1.0.0",
  "private": true,
  "dependencies": {
    "@emotion/react": "^11.7.1",
    "@emotion/styled": "^11.6.0",
    "@mui/material": "^5.2.8",
    "firebase": "^9.1.3",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-scripts": "5.0.0",
    "web-vitals": "^1.1.2"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  }
}
import React from 'react';
import { Container } from '@mui/material';
import Header from './components/Header';
import RecipeList from './components/RecipeList';

function App() {
  return (
    <div>
      <Header />
      <Container>
        <RecipeList />
      </Container>
    </div>
  );
}

export default App;
import React from 'react';
import { AppBar, Toolbar, Typography, Button } from '@mui/material';

function Header() {
  return (
    <AppBar position="static">
      <Toolbar>
        <Typography variant="h6" style={{ flexGrow: 1 }}>
          Recipe Sharing Platform
        </Typography>
        <Button color="inherit">Home</Button>
        <Button color="inherit">Add Recipe</Button>
        <Button color="inherit">My Recipes</Button>
      </Toolbar>
    </AppBar>
  );
}

export default Header;
import React from 'react';
import { Grid } from '@mui/material';
import RecipeItem from './RecipeItem';

const recipes = [
  {
    id: 1,
    title: 'Spaghetti Carbonara',
    description: 'A classic Italian pasta dish',
    image: '/images/carbonara.jpg',
  },
  {
    id: 2,
    title: 'Chicken Curry',
    description: 'A spicy and flavorful dish',
    image: '/images/curry.jpg',
  },
];

function RecipeList() {
  return (
    <Grid container spacing={4}>
      {recipes.map((recipe) => (
        <Grid item xs={12} sm={6} md={4} key={recipe.id}>
          <RecipeItem recipe={recipe} />
        </Grid>
      ))}
    </Grid>
  );
}

export default RecipeList;
import React from 'react';
import { Card, CardActionArea, CardContent, CardMedia, Typography } from '@mui/material';

function RecipeItem({ recipe }) {
  return (
    <Card>
      <CardActionArea>
        <CardMedia
          component="img"
          height="140"
          image={recipe.image}
          alt={recipe.title}
        />
        <CardContent>
          <Typography gutterBottom variant="h5" component="div">
            {recipe.title}
          </Typography>
          <Typography variant="body2" color="text.secondary">
            {recipe.description}
          </Typography>
        </CardContent>
      </CardActionArea>
    </Card>
  );
}

export default RecipeItem;
import { initializeApp } from "firebase/app";
import { getFirestore } from "firebase/firestore";

const firebaseConfig = {
  apiKey: "YOUR_API_KEY",
  authDomain: "your-project.firebaseapp.com",
  projectId: "your-project-id",
  storageBucket: "your-project.appspot.com",
  messagingSenderId: "your-messaging-sender-id",
  appId: "your-app-id"
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

export { db };
import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);

reportWebVitals();
body {
  margin: 0;
  font-family: 'Roboto', sans-serif;
  background-color: #f5f5f5;
}

#root {
  padding-top: 64px; /* Espace pour le Header */
}

img {
  width: 100%;
  object-fit: cover;
}
node_modules/
build/
.env
git init
git add .
git commit -m "Initial commit for recipe sharing platform"
